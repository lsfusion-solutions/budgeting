MODULE BudgetExpenseEmployeeReconcile;

REQUIRE BudgetExpenseEmployee, BudgetExpenseReconcile;

NAMESPACE Budget;

markAsEmployee 'Employee' (Expense e)  { 
    CHANGECLASS e TO EmployeeExpense;
}

EXTEND FORM expenses
    PROPERTIES(ie) markAsEmployee PANEL
    
    PROPERTIES(ie) SHOWIF ie IS EmployeeExpense PANEL nameEmployee
    OBJECTS ec = CostCenter
    PROPERTIES SHOWIF ie IS EmployeeExpense READONLY name(ec), assigned(ie, ec), amount(ie, ec)
    FILTERS assigned(ie, ec)
    
    FILTERGROUP archive
        FILTER 'Hide archive Cost Centers' NOT archive(ec) DEFAULT
;

DESIGN expenses {
    expenseParams {
        expenseMark {
            MOVE PROPERTY(markAsEmployee(ie));
        }
        purchaseDetails {
            MOVE PROPERTY(nameEmployee(ie)) {alignment = STRETCH; panelCaptionVertical = TRUE; }
        }
        MOVE BOX(ec);        
    }
}

reconcileEmployeeReference 'Employee reference' = DATA BOOLEAN (GLAccount);

EXTEND FORM expenses
    PROPERTIES(g) reconcileEmployeeReference
;

reconcileAuto() + { 
    LOCAL locRec = BOOLEAN (Expense);
    locRec(Expense e) <- toReconcile(e) AND [ FILTER expenses.ie](e) AND reconcileEmployeeReference(GLAccount(e));
    
    LOCAL locEmp = Employee (Expense);
    locEmp (Expense e) <- (GROUP LAST Employee em IF isSubstring(reference(e), referenceName(em)) ORDER em) WHERE locRec(e);
    
    CHANGECLASS Expense e TO EmployeeExpense WHERE locEmp(e);  
    employee(EmployeeExpense e) <- locEmp(e) WHERE locEmp(e);
}

